@model RecipeBook.Models.RecipeViewModel

@using (Html.BeginForm("Create", "Recipes", FormMethod.Post))
{
    <div>
    <label for="RecipeName">Recipe Name:</label>
    @Html.TextBoxFor(m => m.RecipeName, new { required = "required" })
    @Html.ValidationMessageFor(m => m.RecipeName)
</div>

    <div>
    <label for="Description">Description:</label>
    @Html.TextAreaFor(m => m.Description)
</div>

    <div>
    <label for="Instructions">Instructions:</label>
    @Html.TextAreaFor(m => m.Instructions, new { required = "required" })
    @Html.ValidationMessageFor(m => m.Instructions)
</div>

    <div>
    <label for="ImageUrl">Image URL:</label>
    @Html.TextBoxFor(m => m.ImageUrl)
</div>

    <h3>Ingredients:</h3>
    <div id="ingredientContainer">
    @for (int i = 0; i < Model.Ingredients.Count; i++)
        {
            <div class="ingredient">
                <label for="Ingredients">Ingredient:</label>
                @Html.TextBoxFor(m => m.Ingredients[i].Name, new { required = "required" })

                <label for="Quantities">Quantity:</label>
                @Html.TextBoxFor(m => m.Ingredients[i].Quantity, new { required = "required" })

                <button type="button" class="removeIngredient">Remove</button>
            </div>
        }
    </div>
    <button type="button" id="addIngredient">Add Ingredient</button>

    <h3>Tags:</h3>
    <div id="tagContainer">
    @for (int i = 0; i < Model.Tags.Count; i++)
        {
            <div class="tag">
                <label for="Tags">Tag:</label>
                @Html.TextBoxFor(m => m.Tags[i].Name, new { required = "required" })

                <button type="button" class="removeTag">Remove</button>
            </div>
        }
    </div>
    <button type="button" id="addTag">Add Tag</button>

    <input type="submit" value="Submit" />
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const addIngredientButton = document.getElementById("addIngredient");
        const ingredientContainer = document.getElementById("ingredientContainer");

        addIngredientButton.addEventListener("click", function () {
            const newIngredientDiv = document.createElement("div");
            newIngredientDiv.className = "ingredient";

            // Get the current count of ingredients
            const index = document.querySelectorAll('.ingredient').length;

            newIngredientDiv.innerHTML = ` 
                <label for="Ingredients">Ingredient:</label>
                <input type="text" name="Ingredients[${index}].Name" required />

                <label for="Quantities">Quantity:</label>
                <input type="text" name="Ingredients[${index}].Quantity" required />

                <button type="button" class="removeIngredient">Remove</button>
            `;

            ingredientContainer.appendChild(newIngredientDiv);

            // Add event listener for removing the ingredient
            const removeIngredientButton = newIngredientDiv.querySelector(".removeIngredient");
            removeIngredientButton.addEventListener("click", function () {
                ingredientContainer.removeChild(newIngredientDiv);
            });
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const addTagButton = document.getElementById("addTag");
        const tagContainer = document.getElementById("tagContainer");

        addTagButton.addEventListener("click", function () {
            const newTagDiv = document.createElement("div");
            newTagDiv.className = "tag";

            const tagIndex = document.querySelectorAll('.tag').length;

            newTagDiv.innerHTML = ` 
                <label for="Tags">Tag:</label>
                <input type="text" name="Tags[${tagIndex}].Name" required />

                <button type="button" class="removeTag">Remove</button>
            `;

            tagContainer.appendChild(newTagDiv);

            // Add event listener for removing the tag
            const removeTagButton = newTagDiv.querySelector(".removeTag");
            removeTagButton.addEventListener("click", function () {
                tagContainer.removeChild(newTagDiv);
            });
        });
    });
</script>
